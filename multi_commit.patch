From a3702fa8d20b8eab5a901ffbe87fc303f754ba46 Mon Sep 17 00:00:00 2001
From: Jeffrey Cheng <jeffreych6@gmail.com>
Date: Tue, 12 Dec 2023 13:02:30 -0500
Subject: [PATCH 1/2] Fixed ratio and stock price

---
 client3.py | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..2d30c4e 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,17 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return
+    
+    return price_a / price_b
 
 
 # Main
@@ -52,8 +55,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
-- 
2.37.3


From d34ae79171f3ef26400654866692b96058c2ecab Mon Sep 17 00:00:00 2001
From: Jeffrey Cheng <jeffreych6@gmail.com>
Date: Tue, 12 Dec 2023 13:20:34 -0500
Subject: [PATCH 2/2] Added tests for getDataPoint and getRatio

---
 0001-Fixed-ratio-and-stock-price.patch |  48 +++++++++++++++++++++++++
 __pycache__/client3.cpython-39.pyc     | Bin 0 -> 1113 bytes
 client_test.py                         |  16 ++++++++-
 3 files changed, 63 insertions(+), 1 deletion(-)
 create mode 100644 0001-Fixed-ratio-and-stock-price.patch
 create mode 100644 __pycache__/client3.cpython-39.pyc

diff --git a/0001-Fixed-ratio-and-stock-price.patch b/0001-Fixed-ratio-and-stock-price.patch
new file mode 100644
index 0000000..fbaa2db
--- /dev/null
+++ b/0001-Fixed-ratio-and-stock-price.patch
@@ -0,0 +1,48 @@
+From a3702fa8d20b8eab5a901ffbe87fc303f754ba46 Mon Sep 17 00:00:00 2001
+From: Jeffrey Cheng <jeffreych6@gmail.com>
+Date: Tue, 12 Dec 2023 13:02:30 -0500
+Subject: [PATCH] Fixed ratio and stock price
+
+---
+ client3.py | 11 ++++++++---
+ 1 file changed, 8 insertions(+), 3 deletions(-)
+
+diff --git a/client3.py b/client3.py
+index 3fc09b7..2d30c4e 100644
+--- a/client3.py
++++ b/client3.py
+@@ -35,14 +35,17 @@ def getDataPoint(quote):
+     stock = quote['stock']
+     bid_price = float(quote['top_bid']['price'])
+     ask_price = float(quote['top_ask']['price'])
+-    price = bid_price
++    price = (bid_price + ask_price) / 2
+     return stock, bid_price, ask_price, price
+ 
+ 
+ def getRatio(price_a, price_b):
+     """ Get ratio of price_a and price_b """
+     """ ------------- Update this function ------------- """
+-    return 1
++    if price_b == 0:
++        return
++    
++    return price_a / price_b
+ 
+ 
+ # Main
+@@ -52,8 +55,10 @@ if __name__ == "__main__":
+         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+         """ ----------- Update to get the ratio --------------- """
++        prices = {}
+         for quote in quotes:
+             stock, bid_price, ask_price, price = getDataPoint(quote)
++            prices[stock] = price
+             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+-        print("Ratio %s" % getRatio(price, price))
++        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
+-- 
+2.37.3
+
diff --git a/__pycache__/client3.cpython-39.pyc b/__pycache__/client3.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..3ed3ef77c739670175a04c9e6d8dd598c70fa9c3
GIT binary patch
literal 1113
zcmYjQ&2JMs5V!X$Nt=|?Pa-5_kPrk>QpAC(g7^3caI5$b2Q1LaT~E?&H@m6r01fFW
z@2_|l(j))GJG?)`S5DkHabnhKD{RepW;{Ed`OU0oH0B7d_g_E5zcoU>m&%_DZR8P>
z{vVknl4gX@PRgm%J?=}72h!)E3}pBZ;gO7F1<wjpW%a;Q|3MArAe_(%?T`<j`8<$m
z9sK>qbOD0t1)x)ULQd!joi3IqznBuf1Q*eFlP^OA%M<!O;46HUukm$Qhb35fK;V+B
z!3wOx8mxDNH8P=;91hSr2NhV7^G$-h-Xs(6^sXc68`5h0z&gmz=<1#^gY9-ZD-x0I
z720fXZEkJ04~L+R{!Zn?FURRmN=SlqzCx4&q^C&w5wbDj(Im&zl#<sZ(#QAcvFG&Q
zT=&P`*k30yyiAURF)g)m&<!w~Xmp>wRD~QSz(kfYvj;2(kRaJdkqtpJQ?MT7poBpW
zCWR4$BFzo6p*BTwU@N8=#Jj1q;XtJc%ygj-et4K)i`uZ86~eSa8y*e|1FAIJ8h#MZ
z{A=ht6IEH-H=^e8`1P>;R)f;*edu--93^{@_u3uM2l!mOTPV?kjr~DC+0dV0!(fb!
zyX_=PAvgE#432EQ2d0C$zI3@_K<%c?uhK=_b*dU@OUhi%Rw<X{uw6l6OeMwHsY~w-
zqC2LS3F76CuCW(j7{ZYjtmraVL@b!d<*B^ORN1o~S4Yd^l~b29Vb@*ESREa06?1)E
z#=C`@j*t<|Gw{@cyN%<%Nb@)z-FQ_3DA{$*gkd)k!tLw&HpAN8>7GHUHLAL3=x6=M
zPo7%8^Xz%6$%B1e<UCTCY0>8kLzQLe?i~d<aoX@`rt|RC+h?!eS-Rs8I!_@NeTZWl
zq}V|lVvHVG8ru+iD>bj2MX6wvVgR{~utj}gY@k3$8@bkN9=RN~s$yYo5LEehtFkq&
u`EG`C^9MlXET|bu5BfN!8T_@1CVd52mE!gT+|@bU-XdjwfVM@XHSaeoY#4L^

literal 0
HcmV?d00001

diff --git a/client_test.py b/client_test.py
index af2bf26..79c0507 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+       self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +17,21 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio(self):
+    quotes = [
+      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+
+    quote_a = (quotes[0]['top_bid']['price'] + quotes[0]['top_ask']['price']) / 2
+    quote_b = (quotes[1]['top_bid']['price'] + quotes[1]['top_ask']['price']) / 2
+    if quote_b != 0:
+      self.assertEqual(getRatio(getDataPoint(quotes[0])[3], getDataPoint(quotes[1])[3]), quote_a / quote_b)
 
 
 
-- 
2.37.3

